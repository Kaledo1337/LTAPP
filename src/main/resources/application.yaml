#metrics
management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /actuator
  metrics:
    enable:
      kafka: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
      percentiles:
        kafka.produce.time: [ 0.5, 0.95 ] #
      sla:
        kafka.listener.process.time: 1s
    tags:
      application: LT-app
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

#swagger
xset:
  openapi:
    dev-url: http://localhost:8080
    prod-url: https://xset-api.com

#database
spring:
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true
  datasource:
    url: jdbc:postgresql://postgres:5432/postgres
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000  #
      metrics-enabled: true

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB


  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      metrics:
        enabled: true
    consumer:
      group-id: yourGroupId
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      metrics:
        enabled: true
    listener:
      ack-mode: manual
    template:
      default-topic: my-default-topic

server:
  port: 8080
  shutdown: graceful

#JMX
#-Dcom.sun.management.jmxremote
#-Dcom.sun.management.jmxremote.port=YOUR_JMX_PORT
#-Dcom.sun.management.jmxremote.rmi.port=YOUR_JMX_PORT
#-Dcom.sun.management.jmxremote.authenticate=false
#-Dcom.sun.management.jmxremote.ssl=false
#-Djava.rmi.server.hostname=YOUR_JMX_HOST